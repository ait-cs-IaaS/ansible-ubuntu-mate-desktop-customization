---

- name: Reset dconf to default
  become_user: "{{ customize_user }}"
  become: true
  ansible.builtin.shell:
    cmd: dbus-launch dconf reset -f /
  when: force_desktop_reset

- name: Reboot machine and wait
  ansible.builtin.reboot:
  when: force_desktop_reset

- name: Set Familiar as default layout
  become_user: "{{ customize_user }}"
  become: true
  community.general.dconf:
    key: /org/mate/panel/general/default-layout
    value: "'familiar'"

- name: Add Theme Repo
  become: true
  ansible.builtin.apt_repository:
    repo: "{{ customize_theme_repo }}"
    state: present
  when: customize_theme_repo is defined
  tags: [install, config]

- name: Install apt packages
  become: true
  ansible.builtin.apt:
    update_cache: true
    name: [dconf-editor, dbus]
  tags: [install, config]

- name: Download GTK theme
  become: true
  community.general.snap:
    name: "{{ customize_theme_package }}"
  when: customize_theme_package is defined
  tags: [install, config]

- name: Adjust dconf settings
  become_user: "{{ customize_user }}"
  become: true
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  loop: "{{ mate_dconf_settings | dict2items }}"

- name: Set Desktop Background
  ansible.builtin.include_tasks:
    file: background.yml

- name: Get current panel list
  become_user: "{{ customize_user }}"
  become: true
  community.general.dconf:
    key: /org/mate/panel/general/object-id-list
    state: read
  register: panel_list
  tags: [config]

- name: Copy and install default profile
  become_user: "{{ customize_user }}"
  become: true
  block:
    - name: Copy profile to host
      ansible.builtin.copy:
        src: default_profile
        dest: /tmp/default_profile
        mode: preserve

    - name: Load panels config
      become_user: "{{ customize_user }}"
      become: true
      ansible.builtin.shell: >
        echo user-db:user > profile ;
        DCONF_PROFILE="$(pwd)/profile"
        dbus-launch
        dconf load / < /tmp/default_profile
      args:
        chdir: /home/{{ customize_user }}/
      changed_when: true

    - name: Activate panels config
      become_user: "{{ customize_user }}"
      become: true
      ansible.builtin.shell: dconf load / < /tmp/default_profile
      args:
        chdir: /home/{{ customize_user }}/
      failed_when: false
      changed_when: true

    - name: Remove tmp file
      ansible.builtin.file:
        path: /tmp/default_profile
        state: absent

    - name: Get current panel list
      community.general.dconf:
        key: /org/mate/panel/general/object-id-list
        state: read
      register: panel_list_reset

  when: panel_list.value is none

- name: Setting panel_list
  ansible.builtin.set_fact:
    panel_list: "{{ panel_list_reset if (panel_list.value is none) else panel_list }}"

- name: Create and define launcher objects
  ansible.builtin.include_tasks:
    file: create_new_panel_objects.yml
    apply:
      vars:
        object_name: "{{ new_items.key }}"
        object_properties: "{{ new_items.value }}"
        new_panel_list: "{{ panel_list.value }}"
  loop: "{{ launcher_objects | dict2items }}"
  loop_control:
    loop_var: new_items

- name: Set new panel list
  become_user: "{{ customize_user }}"
  become: true
  community.general.dconf:
    key: /org/mate/panel/general/object-id-list
    value: "{{ new_panel_list }}"
  when: new_panel_list is defined
  tags: [config]
