---
- name: Install apt packages
  ansible.builtin.apt:
    update_cache: true
    name: [dconf-editor, dbus]
  become: true
  tags: [install, config]


- name: Download GTK theme
  ansible.builtin.apt:
    name: "{{ customize_theme_package }}"
  become: true
  when: customize_theme_package is defined
  tags: [install, config]

- name: Set GTK theme
  community.general.dconf:
    key: "/org/mate/desktop/interface/gtk-theme"
    value: "'{{ customize_theme_name | default('Ambiant-MATE') }}'"
  when: customize_theme_name is defined
  become_user: "{{ customize_user }}"
  tags: [config]

- name: Get current panel list
  community.general.dconf:
    key: "/org/mate/panel/general/object-id-list"
    state: read
  register: panel_list
  become_user: "{{ customize_user }}"
  tags: [config]


# [BUG] Is empty if never connected before ...

- name: Copy and install default profile
  block:
    - name: Copy profile to host
      ansible.builtin.copy:
        src: default_profile
        dest: /tmp/default_profile
        mode: preserve
    - name: Load panels config
      ansible.builtin.shell: >
        echo user-db:user > profile ;
        DCONF_PROFILE="$(pwd)/profile"
        dbus-launch
        dconf load / < /tmp/default_profile
      args:
        chdir: "/home/{{ customize_user }}/"
      become: true
      become_user: "{{ customize_user }}"
      changed_when: true
    - name: Activate panels config
      ansible.builtin.shell: dconf load / < /tmp/default_profile
      args:
        chdir: "/home/{{ customize_user }}/"
      failed_when: false
      become: true
      become_user: "{{ customize_user }}"
      changed_when: true
    - name: Remove tmp file
      ansible.builtin.file:
        path: /tmp/default_profile
        state: absent
    - name: Get current panel list
      community.general.dconf:
        key: "/org/mate/panel/general/object-id-list"
        state: read
      register: panel_list_reset
  when: panel_list.value is none
  become: true
  become_user: "{{ customize_user }}"

- name: Setting panel_list
  ansible.builtin.set_fact:
    panel_list: "{{ panel_list_reset if (panel_list.value is none) else panel_list }}"

- name: Create and define launcher objects
  ansible.builtin.include_tasks: create_new_panel_objects.yml
  vars:
    object_name: "{{ new_items.key }}"
    object_properties: "{{ new_items.value }}"
    new_panel_list: "{{ panel_list.value }}"
  loop: "{{ launcher_objects | dict2items }}"
  loop_control:
    loop_var: new_items

- name: Set new panel list
  community.general.dconf:
    key: "/org/mate/panel/general/object-id-list"
    value: "{{ override_panel_list }}"
  when: override_panel_list is defined
  become_user: "{{ customize_user }}"
  tags: [config]

- name: Set Desktop Background
  ansible.builtin.include_tasks: background.yml
